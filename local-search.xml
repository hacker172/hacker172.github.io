<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python消息轰炸脚本</title>
    <link href="/2024/08/20/Python%E6%B6%88%E6%81%AF%E8%BD%B0%E7%82%B8%E8%84%9A%E6%9C%AC/"/>
    <url>/2024/08/20/Python%E6%B6%88%E6%81%AF%E8%BD%B0%E7%82%B8%E8%84%9A%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<p>Python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> pynput.keyboard <span class="hljs-keyword">import</span> Key,Controller<br><span class="hljs-keyword">import</span> time<br>keyboard=Controller()<br>messages=<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你要轰炸的信息：&quot;</span>)<br>times=<span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你要轰炸的次数：&quot;</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;数据已被后台接受，请将光标移动至会话框&quot;</span>)<br>time.sleep(<span class="hljs-number">2</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;距离信息轰炸还需要%d秒&quot;</span>%(<span class="hljs-number">3</span>-i))<br>    time.sleep(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(times):<br>    keyboard.<span class="hljs-built_in">type</span>(messages)<br>    keyboard.press(Key.enter)<br>    keyboard.release(Key.enter)<br>    time.sleep(<span class="hljs-number">0.1</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;信息轰炸已经顺利完成，已退出！&quot;</span>)<br></code></pre></td></tr></table></figure><p>DownLoad Url:  <a href="https://aoo.ink/upload/%E6%B6%88%E6%81%AF%E8%BD%B0%E7%82%B8%E6%96%87%E4%BB%B6">https://aoo.ink/upload/消息轰炸文件</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2024/08/20小记</title>
    <link href="/2024/08/20/2024-08-19%E5%B0%8F%E8%AE%B0/"/>
    <url>/2024/08/20/2024-08-19%E5%B0%8F%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>Python项目将在今晚8:00-9:00完成项目闭环<br>明天上午发行0.01版本，EXE文件+Py文件，开源Github</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2024/08/18小记</title>
    <link href="/2024/08/18/hello-world/"/>
    <url>/2024/08/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>利用Python(一种编程语言)的PyMySQL模块实现了连接MySQL内容，实现了注册用户，并把用户密码传入MySQL数据库</p><p>源代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> pymysql<br><span class="hljs-keyword">import</span> customtkinter<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">connect_db</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;连接数据库函数</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        None</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Returns:</span><br><span class="hljs-string">        pymysql.connections.Connection: 数据库连接对象，若连接失败则返回None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 替换为你的数据库连接信息</span><br>        conn = pymysql.connect(<br>            host = <span class="hljs-string">&#x27;mysql.sqlpub.com&#x27;</span>, <span class="hljs-comment"># 连接主机, 默认127.0.0.1 </span><br>            user = <span class="hljs-string">&#x27;yuxuan1012&#x27;</span>,      <span class="hljs-comment"># 用户名</span><br>            passwd = <span class="hljs-string">&#x27;Ki1jpS4leURR4TFu&#x27;</span>,<span class="hljs-comment"># 密码</span><br>            port = <span class="hljs-number">3306</span>,        <span class="hljs-comment"># 端口，默认为3306</span><br>            db = <span class="hljs-string">&#x27;yuxuan1012&#x27;</span>,        <span class="hljs-comment"># 数据库名称</span><br>            charset = <span class="hljs-string">&#x27;utf8&#x27;</span>    <span class="hljs-comment"># 字符编码</span><br>        )   <br>        <span class="hljs-keyword">return</span> conn<br>    <span class="hljs-keyword">except</span> pymysql.err.OperationalError <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;数据库连接失败：<span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>        customtkinter.messagebox.showerror(<span class="hljs-string">&quot;错误&quot;</span>, <span class="hljs-string">&quot;连接数据库失败，请检查网络和数据库配置。&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>  <span class="hljs-comment"># 返回None表示连接失败</span><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">register</span>():<br>    <span class="hljs-string">&quot;&quot;&quot;用户注册函数</span><br><span class="hljs-string"></span><br><span class="hljs-string">    Args:</span><br><span class="hljs-string">        None</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br><br>    <span class="hljs-comment"># 获取用户输入</span><br>    username = entry_username.get()<br>    password = entry_password.get()<br>    confirm_password = entry_confirm_password.get()<br><br>    <span class="hljs-comment"># 密码校验</span><br>    <span class="hljs-keyword">if</span> password != confirm_password:<br>        customtkinter.messagebox.showwarning(<span class="hljs-string">&quot;警告&quot;</span>, <span class="hljs-string">&quot;两次输入的密码不一致！&quot;</span>)<br>        <span class="hljs-keyword">return</span><br><br>    <span class="hljs-comment"># 连接数据库</span><br>    conn = connect_db()<br><br>    <span class="hljs-keyword">if</span> conn:<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">with</span> conn.cursor() <span class="hljs-keyword">as</span> cursor:<br>                <span class="hljs-comment"># 检查表是否存在，如果不存在则创建</span><br>                cursor.execute(<span class="hljs-string">&quot;SHOW TABLES LIKE &#x27;users&#x27;&quot;</span>)<br>                exists = cursor.fetchone()<br>                <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> exists:<br>                    cursor.execute(<span class="hljs-string">&quot;CREATE TABLE users (username VARCHAR(50), password VARCHAR(50))&quot;</span>)<br><br>                <span class="hljs-comment"># 执行插入用户信息的SQL语句</span><br>                sql = <span class="hljs-string">&quot;INSERT INTO users (username, password) VALUES (%s, %s)&quot;</span><br>                cursor.execute(sql, (username, password))<br>                conn.commit()<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;注册成功！&quot;</span>)<br>        <span class="hljs-keyword">except</span> pymysql.err.Error <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-comment"># 处理数据库操作异常</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;数据库操作错误：<span class="hljs-subst">&#123;e&#125;</span>&quot;</span>)<br>            customtkinter.messagebox.showerror(<span class="hljs-string">&quot;错误&quot;</span>, <span class="hljs-string">&quot;注册失败，请检查数据库配置或联系管理员。&quot;</span>)<br>        <span class="hljs-keyword">finally</span>:<br>            <span class="hljs-comment"># 确保连接关闭</span><br>            conn.close()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-comment"># 连接失败，显示错误信息</span><br>        customtkinter.messagebox.showerror(<span class="hljs-string">&quot;错误&quot;</span>, <span class="hljs-string">&quot;注册失败，请检查网络连接或管理员。&quot;</span>)<br><br><span class="hljs-comment"># 创建界面部分（省略，与之前代码相同）</span><br><br><span class="hljs-comment"># 创建界面</span><br>customtkinter.set_appearance_mode(<span class="hljs-string">&quot;Dark&quot;</span>)  <span class="hljs-comment"># Modes: &quot;System&quot; (standard), &quot;Dark&quot;, &quot;Light&quot;</span><br>customtkinter.set_default_color_theme(<span class="hljs-string">&quot;green&quot;</span>)  <span class="hljs-comment"># Themes: &quot;blue&quot; (standard), &quot;green&quot;, &quot;dark-blue&quot;</span><br><br>root = customtkinter.CTk()<br>root.geometry(<span class="hljs-string">&quot;400x300&quot;</span>)<br><br>frame = customtkinter.CTkFrame(master=root)<br>frame.pack(pady=<span class="hljs-number">20</span>, padx=<span class="hljs-number">60</span>, fill=<span class="hljs-string">&quot;both&quot;</span>, expand=<span class="hljs-literal">True</span>)<br><br>label = customtkinter.CTkLabel(master=frame, text=<span class="hljs-string">&quot;注册&quot;</span>, font=(<span class="hljs-string">&quot;Roboto&quot;</span>, <span class="hljs-number">24</span>))<br>label.pack(pady=<span class="hljs-number">12</span>, padx=<span class="hljs-number">10</span>)<br><br>entry_username = customtkinter.CTkEntry(master=frame, placeholder_text=<span class="hljs-string">&quot;注册用户名&quot;</span>)<br>entry_username.pack(pady=<span class="hljs-number">12</span>, padx=<span class="hljs-number">10</span>)<br>entry_password = customtkinter.CTkEntry(master=frame, placeholder_text=<span class="hljs-string">&quot;注册密码&quot;</span>, show=<span class="hljs-string">&quot;*&quot;</span>)<br>entry_password.pack(pady=<span class="hljs-number">12</span>, padx=<span class="hljs-number">10</span>)<br>entry_confirm_password = customtkinter.CTkEntry(master=frame, placeholder_text=<span class="hljs-string">&quot;确认密码&quot;</span>, show=<span class="hljs-string">&quot;*&quot;</span>)<br>entry_confirm_password.pack(pady=<span class="hljs-number">12</span>, padx=<span class="hljs-number">10</span>)<br><br>button = customtkinter.CTkButton(master=frame, text=<span class="hljs-string">&quot;注册&quot;</span>, command=register)<br>button.pack(pady=<span class="hljs-number">12</span>, padx=<span class="hljs-number">10</span>)<br><br>root.mainloop()<br></code></pre></td></tr></table></figure><p>后续准备：实现密码加密，防止被透底，加入登录代码………<br>明天去找一个朋友下棋，还说在什么棋牌室，等着今晚我要看看高德地图，那儿到底在哪里啊<br>刚才下雨了下的不小，希望现在能停雨。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Github新项目出炉！！！</title>
    <link href="/2024/08/16/Github%E6%96%B0%E9%A1%B9%E7%9B%AE%E5%87%BA%E7%82%89%EF%BC%81%EF%BC%81%EF%BC%81/"/>
    <url>/2024/08/16/Github%E6%96%B0%E9%A1%B9%E7%9B%AE%E5%87%BA%E7%82%89%EF%BC%81%EF%BC%81%EF%BC%81/</url>
    
    <content type="html"><![CDATA[<ol><li>导入库<br>customtkinter: 用于创建自定义的Tkinter界面，提供更美观和现代的控件。<br>tkinter: Python自带的GUI库，用于创建基本的图形用户界面。<br>ttk: 提供了一些额外的Tkinter主题和控件。<br>requests: 用于发送HTTP请求，下载文件。<br>os: 提供与操作系统交互的接口，用于删除文件。</li><li>创建主窗口<br>customtkinter.CTk(): 创建一个主窗口。<br>root.geometry(): 设置窗口大小。<br>root.title(): 设置窗口标题。</li><li>创建界面元素<br>CTkEntry: 创建一个密码输入框。<br>CTkButton: 创建一个下载按钮，点击后触发download_and_display函数。<br>ttk.Progressbar: 创建一个进度条，显示下载进度。<br>CTkTextbox: 创建一个文本框，用于显示下载的文件内容。</li><li>download_and_display函数<br>密码验证: 首先检查输入的密码是否正确。这里简单地使用了硬编码的密码，实际应用中应该使用更安全的密码验证方式，比如哈希加密等。<br>下载文件:<br>使用requests.get下载文件，并以流的方式处理，以便在下载过程中显示进度。<br>使用with open创建一个临时文件，将下载的内容写入该文件。<br>每次写入一个块的数据后，更新进度条的值。<br>显示文件内容:<br>将临时文件的内容读取到内存，并显示在文本框中。<br>删除临时文件。<br>异常处理: 使用try-except块捕获可能的异常，比如网络连接错误等。<br>代码运行流程<br>运行程序，出现一个窗口。<br>用户在密码输入框中输入密码，点击”See Now”按钮。<br>程序调用download_and_display函数。<br>函数验证密码，如果正确，开始下载文件。<br>下载过程中，进度条实时更新。<br>下载完成后，将文件内容显示在文本框中，并删除临时文件。<br>各个代码的作用<br>import: 导入所需的库。<br>set_appearance_mode: 设置界面外观模式。<br>set_default_color_theme: 设置默认颜色主题。<br>创建窗口和控件: 创建用户界面。<br>download_and_display: 实现下载和显示文件的功能。<br>密码验证: 检查密码是否正确。<br>下载文件: 使用requests库下载文件。<br>显示文件内容: 将文件内容显示在文本框中。<br>异常处理: 处理下载过程中可能出现的错误。<br>注意事项<br>密码安全性: 实际应用中，应该使用更安全的密码验证方式，比如哈希加密等。<br>文件路径: 需要将file_path替换为实际的文件路径。<br>错误处理: 可以添加更多的错误处理，比如文件不存在、写入文件失败等。<br>用户体验: 可以添加一些用户友好的提示，比如下载完成后的提示。<br>总结</li></ol><p>这段代码实现了一个简单的文件下载并显示的程序。用户输入密码后，程序会下载指定的文件，并将其内容显示在文本框中。整个过程通过进度条显示进度。</p><p>有朝一日</p><p>密码加密: 使用更安全的密码存储和验证方式。<br>多线程: 可以使用多线程来提高下载速度。<br>文件类型支持: 可以支持下载不同类型的文件。<br>错误处理: 可以添加更多的错误处理，比如文件损坏、网络中断等。<br>用户界面: 可以对用户界面进行优化，使其更加美观和易用。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
